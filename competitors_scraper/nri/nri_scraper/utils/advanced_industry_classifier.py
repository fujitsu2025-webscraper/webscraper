"""
高度なインダストリー分類機能を提供するユーティリティ
"""
import re
import logging
from collections import Counter
from ..config.settings import INDUSTRY_LIST, NRI_INDUSTRY_MAPPING, EXPLICIT_COMPANY_MAPPING, INDUSTRY_SYSTEM_MESSAGE
from .openai_client import generate_with_gpt4o_mini
from .industry_classifier import determine_industry as basic_determine_industry

logger = logging.getLogger("nri_scraper")

# コンテキスト認識のための正規表現パターン
CONTEXT_PATTERNS = {
    "対象": r"([^\s]+)(向け|専用|対応|用)のサービス",
    "業界": r"([^\s]+)業界における",
    "課題": r"([^\s]+)業界の課題を解決",
}

# サービス名と機能の関連性マッピング
SERVICE_FUNCTION_MAPPING = {
    "クラウド": ["テクノロジー", "情報通信"],
    "セキュリティ": ["テクノロジー", "情報通信"],
    "データ分析": ["テクノロジー", "金融サービス"],
    "決済": ["金融サービス", "銀行・証券"],
    "投資": ["金融サービス", "資産運用"],
    "保険": ["保険"],
    "AI": ["テクノロジー"],
    "ロボット": ["テクノロジー", "産業機械"],
    "IoT": ["テクノロジー", "情報通信"],
    "DX": ["テクノロジー"],
    "デジタル": ["テクノロジー"],
    "プラットフォーム": ["テクノロジー"],
    "オンライン": ["テクノロジー"],
    "アプリ": ["テクノロジー"],
    "システム": ["テクノロジー"],
}

# 業界ごとの共起語辞書
INDUSTRY_COLLOCATIONS = {
    "金融サービス": ["取引", "口座", "資産", "投資", "融資", "預金", "金融機関", "バンキング", "マネー", "決済", "送金", "振込", "為替", "金利", "ローン", "クレジット", "デビット", "ファイナンス", "財務", "収益", "運用", "資金調達", "債券", "株式", "ETF", "ファンド", "信託", "フィンテック", "仮想通貨", "ブロックチェーン", "キャッシュレス", "電子マネー", "QRコード決済"],
    
    "銀行・証券": ["銀行", "証券", "口座", "預金", "融資", "投資", "取引", "金融商品", "窓口", "ATM", "インターネットバンキング", "モバイルバンキング", "住宅ローン", "カードローン", "定期預金", "普通預金", "当座預金", "外貨預金", "信用", "債務", "与信", "審査", "トレーディング", "ディーリング", "株式売買", "債券取引", "IPO", "M&A", "PO", "証券口座", "信用取引", "先物", "オプション", "デリバティブ", "NISA", "iDeCo", "つみたてNISA"],
    
    "テクノロジー": ["開発", "実装", "API", "インテグレーション", "プラットフォーム", "クラウド", "システム", "ソフトウェア", "ハードウェア", "アプリケーション", "プログラミング", "コーディング", "データベース", "サーバー", "ネットワーク", "インフラ", "セキュリティ", "認証", "暗号化", "バックアップ", "リカバリ", "仮想化", "コンテナ", "マイクロサービス", "DevOps", "CI/CD", "Git", "オープンソース", "SaaS", "PaaS", "IaaS", "エッジコンピューティング", "IoT", "ビッグデータ", "機械学習", "深層学習", "AI", "自然言語処理", "画像認識", "音声認識", "ロボティクス", "VR", "AR", "MR", "5G", "6G", "量子コンピュータ"],
    
    "自動車": ["車両", "走行", "ドライバー", "メーカー", "部品", "自動車", "カー", "モビリティ", "エンジン", "トランスミッション", "シャーシ", "ボディ", "内装", "外装", "タイヤ", "ホイール", "ブレーキ", "サスペンション", "ステアリング", "エアバッグ", "シートベルト", "カーナビ", "オーディオ", "エアコン", "燃費", "排気ガス", "電気自動車", "ハイブリッド車", "燃料電池車", "自動運転", "ADAS", "コネクテッドカー", "カーシェアリング", "ライドシェア", "MaaS", "OEM", "ティア1", "ティア2", "アフターマーケット", "ディーラー", "整備", "点検", "車検"],
    
    "消費財・小売・流通": ["小売", "流通", "店舗", "EC", "消費者", "顧客", "商品", "販売", "仕入れ", "在庫", "物流", "配送", "卸売", "メーカー", "ブランド", "マーケティング", "広告", "販促", "キャンペーン", "ポイント", "会員", "顧客管理", "CRM", "POS", "レジ", "バーコード", "QRコード", "RFID", "SCM", "サプライチェーン", "需要予測", "発注", "仕入先", "取引先", "VMI", "オムニチャネル", "D2C", "BtoC", "BtoB", "CtoC", "ラストワンマイル", "フルフィルメント", "返品", "アパレル", "食品", "日用品", "家電", "化粧品", "医薬品", "ペット用品"],
    
    "運輸・物流": ["配送", "物流", "輸送", "倉庫", "サプライチェーン", "在庫", "トラック", "配達", "集荷", "発送", "納品", "宅配", "路線", "航路", "フライト", "コンテナ", "パレット", "フォークリフト", "ピッキング", "梱包", "荷役", "通関", "関税", "輸出", "輸入", "国際輸送", "国内輸送", "海上輸送", "航空輸送", "鉄道輸送", "トラック輸送", "3PL", "4PL", "フォワーダー", "運送業者", "配送業者", "宅配業者", "クール便", "冷蔵", "冷凍", "常温", "危険物", "重量物", "特殊貨物", "貨物追跡", "配送状況", "納期", "リードタイム", "在庫回転率"],
    
    "ヘルスケア・医薬ライフサイエンス": ["医療", "病院", "患者", "診療", "健康", "医薬品", "治療", "臨床", "医師", "看護師", "薬剤師", "診断", "検査", "手術", "投薬", "処方", "副作用", "予防", "予防接種", "ワクチン", "抗体", "遺伝子", "細胞", "タンパク質", "DNA", "RNA", "バイオマーカー", "臨床試験", "治験", "新薬", "ジェネリック", "OTC", "処方箋", "調剤", "薬局", "ドラッグストア", "製薬", "医療機器", "医療材料", "介護", "リハビリ", "在宅医療", "遠隔医療", "電子カルテ", "レセプト", "保険点数", "DPC", "ICD", "WHO", "FDA", "PMDA", "GMP", "GCP", "GLP"],
    
    "エネルギー・資源・鉱業": ["電力", "ガス", "エネルギー", "資源", "発電", "石油", "再生可能", "環境", "火力発電", "水力発電", "原子力発電", "太陽光発電", "風力発電", "地熱発電", "バイオマス", "送電", "配電", "変電", "蓄電", "スマートグリッド", "電力自由化", "ガス自由化", "石油精製", "石油化学", "LNG", "LPG", "天然ガス", "シェールガス", "石炭", "鉄鉱石", "銅", "アルミニウム", "レアメタル", "レアアース", "採掘", "精錬", "精製", "鉱山", "油田", "ガス田", "炭鉱", "探査", "掘削", "パイプライン", "タンカー", "省エネ", "創エネ", "蓄エネ", "カーボンニュートラル", "脱炭素", "CO2削減", "温室効果ガス"],
    
    "保険": ["保険", "契約", "保険料", "保険金", "リスク", "補償", "査定", "保険会社", "生命保険", "損害保険", "医療保険", "がん保険", "自動車保険", "火災保険", "地震保険", "海上保険", "傷害保険", "賠償責任保険", "保険代理店", "保険ブローカー", "保険募集人", "アンダーライティング", "クレーム", "事故", "災害", "被害", "被保険者", "保険契約者", "保険金受取人", "告知義務", "免責", "免責金額", "控除", "特約", "約款", "保険証券", "満期", "解約", "更新", "継続", "保険金請求", "支払査定", "再保険", "共済", "相互会社", "株式会社", "保険数理", "アクチュアリー", "モラルハザード"],
    
    "資産運用": ["資産運用", "投資信託", "ファンド", "資産管理", "運用会社", "運用実績", "運用報酬", "投資顧問", "投資助言", "ポートフォリオ", "アセットアロケーション", "分散投資", "リスク管理", "リターン", "利回り", "配当", "分配金", "純資産", "基準価額", "NAV", "株式投資", "債券投資", "不動産投資", "オルタナティブ投資", "ヘッジファンド", "プライベートエクイティ", "ベンチャーキャピタル", "ESG投資", "インパクト投資", "インデックス運用", "アクティブ運用", "パッシブ運用", "クオンツ運用", "ロボアドバイザー", "IFA", "フィデューシャリー・デューティ", "スチュワードシップ・コード", "コーポレートガバナンス・コード"],
    
    "不動産": ["不動産", "住宅", "マンション", "オフィス", "賃貸", "売買", "仲介", "管理", "開発", "建設", "リフォーム", "リノベーション", "インテリア", "エクステリア", "土地", "建物", "区分所有", "共有", "賃貸借", "賃料", "敷金", "礼金", "更新料", "管理費", "修繕積立金", "固定資産税", "都市計画税", "不動産取得税", "登記", "権利証", "抵当権", "住宅ローン", "住宅金融支援機構", "フラット35", "不動産投資", "REIT", "不動産投資信託", "収益物件", "利回り", "キャップレート", "NOI", "バリューアップ", "デューデリジェンス", "エリアマネジメント", "スマートシティ", "コンパクトシティ", "TOD", "ニュータウン"],
    
    "重工業・エンジニアリング": ["重工業", "プラントエンジニアリング", "重工メーカー", "エンジニアリング", "プラント", "設備", "重機", "造船", "航空機", "宇宙", "防衛", "原子力", "火力", "水力", "発電所", "製鉄所", "製油所", "化学プラント", "LNGプラント", "浄水場", "下水処理場", "廃棄物処理施設", "橋梁", "トンネル", "ダム", "港湾", "空港", "鉄道", "高速道路", "EPC", "F/S", "FEED", "基本設計", "詳細設計", "調達", "建設", "試運転", "O&M", "プロジェクトマネジメント", "品質管理", "安全管理", "環境アセスメント", "リスクアセスメント", "コミッショニング", "メンテナンス", "保守", "補修", "改修"],
    
    "産業機械": ["産業機械メーカー", "工作機械メーカー", "製造装置", "産業機械", "工作機械", "ロボット", "生産設備", "旋盤", "フライス盤", "研削盤", "放電加工機", "レーザー加工機", "プレス機", "射出成形機", "鍛造機", "鋳造機", "溶接機", "切断機", "組立機", "検査機", "包装機", "印刷機", "製紙機械", "繊維機械", "食品機械", "医薬品製造装置", "半導体製造装置", "FPD製造装置", "電子部品実装機", "3Dプリンター", "NC", "CNC", "MC", "CAD", "CAM", "CAE", "PLM", "産業用ロボット", "協働ロボット", "AGV", "無人搬送車", "自動倉庫", "自動ピッキングシステム", "FA", "自動化", "省人化", "省力化", "IoT", "スマートファクトリー"],
    
    "素材・化学": ["化学メーカー", "素材メーカー", "化学産業", "素材", "化学", "材料", "繊維", "プラスチック", "金属", "有機化学", "無機化学", "高分子化学", "触媒", "合成", "重合", "添加剤", "溶剤", "顔料", "染料", "接着剤", "塗料", "インク", "樹脂", "ゴム", "繊維", "紙", "パルプ", "セルロース", "ナノマテリアル", "複合材料", "機能性材料", "電子材料", "光学材料", "磁性材料", "生体材料", "環境材料", "エネルギー材料", "構造材料", "鉄鋼", "非鉄金属", "セラミックス", "ガラス", "炭素繊維", "アラミド繊維", "不織布", "フィルム", "シート", "コーティング", "表面処理", "めっき"],
    
    "建設": ["建設会社", "ゼネコン", "建設業界", "建築業界", "建設", "建築", "土木", "不動産開発", "設計", "施工", "監理", "積算", "見積", "入札", "契約", "工事", "現場", "基礎", "構造", "躯体", "外装", "内装", "設備", "電気", "空調", "衛生", "防災", "耐震", "免震", "制震", "環境", "省エネ", "ZEB", "ZEH", "BELS", "CASBEE", "LEED", "BIM", "CIM", "ICT", "IoT", "AI", "ドローン", "3Dスキャン", "VR", "AR", "MR", "i-Construction", "生産性向上", "働き方改革", "安全管理", "品質管理", "工程管理", "原価管理"],
    
    "情報通信": ["通信事業者", "通信キャリア", "ISP事業者", "通信", "電話", "モバイル", "インターネット", "ISP", "固定通信", "移動通信", "音声通信", "データ通信", "IP通信", "光通信", "無線通信", "衛星通信", "5G", "6G", "LTE", "Wi-Fi", "Bluetooth", "NFC", "RFID", "IoT", "M2M", "eSIM", "MVNO", "MVNE", "通信インフラ", "基地局", "アンテナ", "中継局", "データセンター", "サーバー", "ルーター", "スイッチ", "ファイアウォール", "CDN", "クラウド", "エッジ", "ネットワーク", "プロトコル", "TCP/IP", "HTTP", "FTP", "SMTP", "DNS", "セキュリティ", "暗号化", "認証", "VPN"],
    
    "エンタテイメント&メディア": ["メディア企業", "エンターテイメント企業", "放送局", "出版社", "エンタテイメント", "メディア", "放送", "出版", "ゲーム", "テレビ", "ラジオ", "新聞", "雑誌", "書籍", "電子書籍", "動画", "音楽", "映画", "アニメ", "漫画", "ライブ", "コンサート", "舞台", "演劇", "ミュージカル", "スポーツ", "イベント", "フェス", "展示会", "テーマパーク", "カジノ", "ゲームセンター", "ゲーム開発", "ゲームパブリッシャー", "コンテンツ制作", "コンテンツ配信", "ストリーミング", "サブスクリプション", "広告", "スポンサー", "プロモーション", "マーチャンダイジング", "ライセンス", "著作権", "商標権", "肖像権", "パブリシティ権"],
    
    "ホスピタリティ&レジャー": ["ホテルチェーン", "旅行会社", "レジャー産業", "外食チェーン", "ホテル", "旅行", "観光", "レジャー", "外食", "宿泊施設", "リゾート", "温泉", "旅館", "民宿", "ゲストハウス", "民泊", "キャンプ場", "グランピング", "クルーズ", "航空", "鉄道", "バス", "レンタカー", "観光地", "観光スポット", "観光資源", "インバウンド", "アウトバウンド", "国内旅行", "海外旅行", "ビジネストラベル", "MICE", "コンベンション", "エンターテイメント", "アミューズメント", "レジャー施設", "スポーツ施設", "フィットネス", "スパ", "エステ", "レストラン", "カフェ", "バー", "居酒屋", "ファストフード", "フードデリバリー", "ケータリング"],
    
    "総合商社": ["総合商社", "貿易会社", "商社", "トレーディング", "貿易", "輸出", "輸入", "国際取引", "国内取引", "卸売", "仲介", "代理店", "商品", "原材料", "資源", "エネルギー", "食料", "繊維", "化学品", "金属", "機械", "電子", "自動車", "建設", "不動産", "金融", "物流", "情報", "事業投資", "プロジェクト開発", "資源開発", "インフラ開発", "海外拠点", "現地法人", "合弁会社", "M&A", "アライアンス", "パートナーシップ", "バリューチェーン", "サプライチェーン", "リスク管理", "コンプライアンス", "サステナビリティ", "ESG", "SDGs"],
    
    "プライベート・エクイティ（PE）": ["プライベートエクイティファンド", "ベンチャーキャピタル", "PE", "プライベートエクイティ", "ベンチャーキャピタル", "投資ファンド", "バイアウト", "LBO", "MBO", "事業再生", "ターンアラウンド", "グロース投資", "シード投資", "アーリーステージ", "レイターステージ", "エクスパンション", "メザニン", "セカンダリー", "コミットメント", "キャピタルコール", "分配", "IRR", "マルチプル", "MOIC", "キャリード", "ハードル", "クローズ", "エグジット", "IPO", "M&A", "トレードセール", "デューデリジェンス", "バリュエーション", "エンタープライズバリュー", "EBITDA", "レバレッジ", "デット", "エクイティ", "ストラクチャー", "SPV", "LP", "GP", "ファンドマネージャー", "投資委員会"],
    
    "都市・インフラストラクチャー": ["都市開発", "インフラ整備", "社会インフラ", "都市", "インフラ", "社会基盤", "公共施設", "都市計画", "地域計画", "国土計画", "土地利用", "ゾーニング", "再開発", "市街地整備", "住宅地開発", "商業施設開発", "オフィス開発", "複合開発", "TOD", "スマートシティ", "コンパクトシティ", "エコシティ", "レジリエンス", "BCP", "道路", "橋梁", "トンネル", "鉄道", "駅", "空港", "港湾", "河川", "ダム", "上水道", "下水道", "電力", "ガス", "通信", "廃棄物処理", "公園", "緑地", "公共交通", "モビリティ", "MaaS", "シェアリング", "PPP", "PFI", "コンセッション"],
    
    "官公庁・地方自治体・公的機関": ["官公庁", "地方自治体", "公的機関", "政府機関", "自治体", "政府", "公的機関", "行政", "中央省庁", "地方公共団体", "都道府県", "市区町村", "公社", "公団", "独立行政法人", "特殊法人", "認可法人", "公益法人", "NPO", "NGO", "行政サービス", "公共サービス", "電子政府", "電子自治体", "行政手続", "許認可", "規制", "政策", "法令", "条例", "規則", "予算", "決算", "税務", "財政", "公共調達", "入札", "契約", "補助金", "助成金", "交付金", "社会保障", "福祉", "医療", "教育", "環境", "防災", "安全", "治安", "国土", "地域"],
    
    "農林水産・食・バイオ": ["食品メーカー", "農業法人", "バイオテクノロジー企業", "農業", "林業", "水産", "食品", "バイオ", "農産物", "畜産物", "水産物", "林産物", "食料", "飲料", "酒類", "調味料", "加工食品", "冷凍食品", "レトルト食品", "健康食品", "機能性食品", "有機食品", "栽培", "飼育", "養殖", "収穫", "加工", "製造", "流通", "販売", "輸出", "輸入", "食品安全", "品質管理", "トレーサビリティ", "HACCP", "GAP", "JAS", "有機JAS", "品種改良", "育種", "遺伝子組換え", "ゲノム編集", "バイオテクノロジー", "発酵", "醸造", "微生物", "酵素", "アミノ酸", "タンパク質"],
    
    "人材サービス": ["人材サービス会社", "人材派遣会社", "採用支援企業", "人材", "採用", "求人", "転職", "派遣", "人材紹介", "人材派遣", "人材育成", "研修", "教育", "キャリア開発", "スキル開発", "タレントマネジメント", "採用活動", "採用計画", "採用戦略", "採用広報", "採用マーケティング", "採用ブランディング", "リクルーティング", "スカウティング", "ヘッドハンティング", "中途採用", "新卒採用", "インターンシップ", "ジョブフェア", "合同説明会", "面接", "選考", "アセスメント", "適性検査", "レジュメ", "履歴書", "職務経歴書", "求人広告", "求人サイト", "転職サイト", "人材データベース", "HRテック", "採用管理システム", "応募者管理システム"]
}

# 否定表現パターン
NEGATIVE_PATTERNS = [
    r"((?!自動車).)*自動車(?!.*業界).*",  # 「自動車」が含まれるが「自動車業界」ではない
    r"(?!.*向け).*金融.*",  # 「金融」が含まれるが「〜向け」ではない
]

def extract_context(text):
    """
    テキストからコンテキスト情報を抽出する
    
    Args:
        text (str): 分析するテキスト
    
    Returns:
        dict: 抽出されたコンテキスト情報
    """
    extracted_contexts = {}
    for context_type, pattern in CONTEXT_PATTERNS.items():
        matches = re.findall(pattern, text)
        if matches:
            extracted_contexts[context_type] = matches
    
    logger.info(f"抽出されたコンテキスト: {extracted_contexts}")
    return extracted_contexts

def check_negative_patterns(text, industry):
    """
    否定パターンをチェックする
    
    Args:
        text (str): チェックするテキスト
        industry (str): 確認するインダストリー
    
    Returns:
        bool: 否定パターンに一致する場合はTrue
    """
    for pattern in NEGATIVE_PATTERNS:
        if re.match(pattern, text) and industry in pattern:
            logger.info(f"否定パターンに一致: {pattern}")
            return True
    return False

def estimate_industry_from_function(service_name, description):
    """
    サービス機能からインダストリーを推定
    
    Args:
        service_name (str): サービス名
        description (str): サービス説明
    
    Returns:
        str: 推定されたインダストリー
    """
    combined_text = service_name + " " + description
    potential_industries = []
    
    for function, industries in SERVICE_FUNCTION_MAPPING.items():
        if function in combined_text:
            potential_industries.extend(industries)
            logger.info(f"機能 '{function}' を検出: {industries}")
    
    # 出現頻度でソート
    if potential_industries:
        most_common = Counter(potential_industries).most_common(1)[0][0]
        logger.info(f"機能からの推定インダストリー: {most_common}")
        return most_common
    return None

def calculate_collocation_score(text, industry):
    """
    共起語スコアを計算
    
    Args:
        text (str): 分析するテキスト
        industry (str): インダストリー
    
    Returns:
        float: 共起語スコア (0-1)
    """
    words = set(text.split())
    collocations = set(INDUSTRY_COLLOCATIONS.get(industry, []))
    
    # 共通する単語の数
    common_words = words.intersection(collocations)
    
    # Jaccard係数を計算
    if not collocations:
        return 0
    
    score = len(common_words) / len(collocations)
    logger.info(f"インダストリー '{industry}' の共起語スコア: {score}")
    return score

def extract_service_name_features(service_name):
    """
    サービス名の特徴を抽出
    
    Args:
        service_name (str): サービス名
    
    Returns:
        dict: 抽出された特徴
    """
    features = {}
    
    # カタカナ語の抽出
    katakana_words = re.findall(r'[ァ-ヶー]+', service_name)
    features['katakana_words'] = katakana_words
    
    # 英数字の抽出
    alphanumeric = re.findall(r'[a-zA-Z0-9]+', service_name)
    features['alphanumeric'] = alphanumeric
    
    # 記号の抽出
    symbols = re.findall(r'[®™©]+', service_name)
    features['symbols'] = symbols
    
    logger.info(f"サービス名の特徴: {features}")
    return features

def combined_industry_classification(text, title, company="NRI"):
    """
    複数の判定方法を組み合わせた最終判定
    
    Args:
        text (str): 分析するテキスト
        title (str): サービスのタイトル
        company (str): 企業名
    
    Returns:
        str: 最終的なインダストリー判定結果
    """
    results = {}
    
    # 特定のサービス名に対する例外処理
    service_exceptions = {
        "atlax": "テクノロジー",
        "クラウド": "テクノロジー",
        "マネージド": "テクノロジー",
        "AWS": "テクノロジー",
        "Google Cloud": "テクノロジー",
        "Azure": "テクノロジー",
        "API": "テクノロジー",
        "SaaS": "テクノロジー",
        "PaaS": "テクノロジー",
        "IaaS": "テクノロジー"
    }
    
    # サービス名に例外キーワードが含まれる場合は、対応するインダストリーを直接返す
    for keyword, industry in service_exceptions.items():
        if keyword in title:
            logger.info(f"特定のサービス名 '{keyword}' を検出したため、'{industry}' を割り当てます")
            return industry
    
    # 1. コンテキスト抽出
    contexts = extract_context(text)
    if contexts and "対象" in contexts:
        for target, _ in contexts["対象"]:
            for industry, keywords in INDUSTRY_COLLOCATIONS.items():
                if target in keywords:
                    logger.info(f"コンテキスト対象 '{target}' から '{industry}' と判定")
                    results['context'] = (industry, 0.9)  # 高い信頼度
    
    # 2. 基本的なキーワードマッチング
    basic_industry = basic_determine_industry(company, text)
    if basic_industry and basic_industry != "その他":
        results['basic'] = (basic_industry, 0.7)
    
    # 3. サービス機能からの推定
    function_industry = estimate_industry_from_function(title, text)
    if function_industry:
        results['function'] = (function_industry, 0.8)
    
    # 4. 共起語分析
    for industry in INDUSTRY_LIST:
        collocation_score = calculate_collocation_score(text, industry)
        if collocation_score > 0.3:  # 閾値
            results['collocation'] = (industry, collocation_score)
    
    # 5. AIによる判定
    try:
        industry_prompt = f"タイトル: {title}\n\nコンテンツ: {text[:2000]}"
        ai_industry = generate_with_gpt4o_mini(
            industry_prompt,
            INDUSTRY_SYSTEM_MESSAGE,
            max_tokens=50,
            temperature=0.3
        )
        
        if ai_industry in INDUSTRY_LIST:
            results['ai'] = (ai_industry, 0.85)
    except Exception as e:
        logger.error(f"AIによるインダストリー判定中にエラー: {str(e)}")
    
    # 結果がない場合はデフォルト値
    if not results:
        return "テクノロジー"
    
    # 結果の重み付け集計
    weighted_results = {}
    for method, (industry, confidence) in results.items():
        if industry not in weighted_results:
            weighted_results[industry] = 0
        weighted_results[industry] += confidence
    
    # 最も高いスコアのインダストリーを選択
    if weighted_results:
        final_industry = max(weighted_results.items(), key=lambda x: x[1])[0]
        logger.info(f"複合判定の最終結果: {final_industry} (スコア: {weighted_results[final_industry]})")
        
        # クラウド関連のキーワードが含まれている場合は自動車と誤分類しないようにする
        cloud_keywords = ["クラウド", "AWS", "Azure", "Google Cloud", "マネージドサービス", "IaaS", "PaaS", "SaaS"]
        if final_industry == "自動車" and any(keyword in text for keyword in cloud_keywords):
            logger.info(f"クラウド関連キーワードを検出したため、'テクノロジー'に分類します")
            return "テクノロジー"
        
        return final_industry
    
    # デフォルト値
    return "テクノロジー"

def advanced_determine_industry(company, content, title=""):
    """
    高度なインダストリー判定を行う
    
    Args:
        company (str): 企業名
        content (str): コンテンツテキスト
        title (str): タイトル
    
    Returns:
        str: 判定されたインダストリー
    """
    try:
        # 企業名がNRIの場合は、複合判定を使用
        if company == "NRI":
            return combined_industry_classification(content, title, company)
        
        # その他の企業の場合は基本的な判定を使用
        return basic_determine_industry(company, content)
    
    except Exception as e:
        logger.error(f"高度なインダストリー判定中にエラー: {str(e)}")
        return "テクノロジー"  # デフォルト値
